{"version":3,"sources":["webpack:///../packages/nav-frontend-skjema/md/radiopanelgruppe/Radiopanelgruppe.overview.mdx","webpack:///../packages/nav-frontend-skjema/sample/_radiopanelgruppe.example.js"],"names":["name","RadioPanelGruppeExample","props","onChange","event","value","setState","checked","state","radios","label","id","disabled","render","this","legend","feil","undefined","React","Component","_frontmatter","Example","console","warn","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"4LAWsBA,E,qECyCPC,E,YA/Cb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MA4BFC,SAAW,SAACC,EAAOC,GACjB,EAAKC,SAAS,CAAEC,QAASF,KA5BzB,EAAKG,MAAQ,CAAED,QAAS,UAExB,EAAKE,OAAS,CACZ,CACEC,MAAO,YACPL,MAAO,SACPM,GAAG,YAAa,EAAKT,MAAMF,MAE7B,CACEU,MAAO,gBACPL,MAAO,SACPM,GAAG,YAAa,EAAKT,MAAMF,MAE7B,CACEU,MAAO,OACPL,MAAO,OACPO,UAAU,EACVD,GAAG,UAAW,EAAKT,MAAMF,MAE3B,CACEU,MAAO,cACPL,MAAO,SACPM,GAAG,YAAa,EAAKT,MAAMF,OAxBd,E,oCAiCnBa,OAAA,WACE,OACE,kBAAC,mBAAD,CACEb,KAAMc,KAAKZ,MAAMF,KACjBe,OAAO,0BACPN,OAAQK,KAAKL,OACbF,QAASO,KAAKN,MAAMD,QACpBJ,SAAUW,KAAKX,SACfa,KAAMF,KAAKZ,MAAMc,KAAO,2BAAwBC,K,GA1ClBC,IAAMC,WDK/BC,EAAe,GAOtBC,GALgBrB,EAKQ,UALA,SAA6BE,GAEzD,OADAoB,QAAQC,KAAK,aAAevB,EAAO,2EAC5B,kBAASE,KAIZsB,EAAc,CAClBJ,gBAGa,SAASK,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGxB,EACF,8BACD,OAAO,YALS,UAKT,iBAAesB,EAAiBtB,EAAhC,CAAuCwB,WAAYA,EAAYC,QAAQ,cAC5E,kBAAS,CACP,UAAa,qBACZ,gCAAIC,WAAW,OAAU,CACxB,UAAa,0BACZ,gCAAIA,WAAW,MAAS,CACvB,UAAa,yBACZ,+BAAGA,WAAW,MAAS,CACtB,UAAa,uBACb,KAAQ,YAFT,WAGqB,gCAAIA,WAAW,MAAS,CAC9C,UAAa,yBACZ,+BAAGA,WAAW,MAAS,CACtB,UAAa,uBACb,KAAQ,iBAFT,kBAIP,iBAAQ,CACN,GAAM,UADR,UAGA,YAACP,EAAD,CAASM,QAAQ,WACnB,YAAC,EAAD,CAAyB3B,KAAK,YAAY2B,QAAQ,6BAEhD,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,yaAeL,iBAAQ,CACN,GAAM,eADR,eAGA,YAACP,EAAD,CAASM,QAAQ,WACnB,YAAC,EAAD,CAAyB3B,KAAK,YAAYgB,MAAM,EAAMW,QAAQ,6BAE5D,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,2dAoBTH,EAAWI,gBAAiB","file":"component---packages-nav-frontend-skjema-md-radiopanelgruppe-radiopanelgruppe-overview-mdx-c62736476b0fdd1e3613.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport RadioPanelGruppeExample from \"./../../sample/_radiopanelgruppe.example.js\";\nimport { RadioPanelGruppe } from \"./../../\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <nav {...{\n      \"className\": \"table-of-contents\"\n    }}><ol parentName=\"nav\" {...{\n        \"className\": \"toc-level toc-level-1\"\n      }}><li parentName=\"ol\" {...{\n          \"className\": \"toc-item toc-item-h2\"\n        }}><a parentName=\"li\" {...{\n            \"className\": \"toc-link toc-link-h2\",\n            \"href\": \"#normal\"\n          }}>{`Normal`}</a></li><li parentName=\"ol\" {...{\n          \"className\": \"toc-item toc-item-h2\"\n        }}><a parentName=\"li\" {...{\n            \"className\": \"toc-link toc-link-h2\",\n            \"href\": \"#feilmelding\"\n          }}>{`Feilmelding`}</a></li></ol></nav>\n    <h2 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h2>\n    <Example mdxType=\"Example\">\n  <RadioPanelGruppeExample name=\"example-1\" mdxType=\"RadioPanelGruppeExample\" />\n    </Example>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<RadioPanelGruppe\n  name=\"samplename\"\n  legend=\"Hvilken drikke er best?\"\n  radios={[\n    { label: \"Eplejuice\", value: \"juice1\", id: \"juice1id\" },\n    { label: \"Appelsinjuice\", value: \"juice2\", id: \"juice2id\" },\n    { label: \"Melk\", value: \"melk\", disabled: true, id: \"melkid\" },\n    { label: \"Ananasjuice\", value: \"juice3\", id: \"juice4id\" },\n  ]}\n  checked={this.state.checked}\n  onChange={this.onChange}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"feilmelding\"\n    }}>{`Feilmelding`}</h2>\n    <Example mdxType=\"Example\">\n  <RadioPanelGruppeExample name=\"example-2\" feil={true} mdxType=\"RadioPanelGruppeExample\" />\n    </Example>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<RadioPanelGruppe\n  name=\"samplename\"\n  legend=\"Hvilken drikke er best?\"\n  radios={[\n    { label: \"Eplejuice\", value: \"juice1\", id: \"juice1id\" },\n    { label: \"Appelsinjuice\", value: \"juice2\", id: \"juice2id\" },\n    { label: \"Melk\", value: \"melk\", disabled: true, id: \"melkid\" },\n    { label: \"Ananasjuice\", value: \"juice3\", id: \"juice4id\" },\n  ]}\n  checked={this.state.checked}\n  onChange={this.onChange}\n  feil={{ feilmelding: \"Her er det en feil.\" }}\n/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\n\nimport { RadioPanelGruppe } from \"..\";\n\nclass RadioPanelGruppeExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { checked: \"juice1\" };\n\n    this.radios = [\n      {\n        label: \"Eplejuice\",\n        value: \"juice1\",\n        id: `juice1id-${this.props.name}`,\n      },\n      {\n        label: \"Appelsinjuice\",\n        value: \"juice2\",\n        id: `juice2id-${this.props.name}`,\n      },\n      {\n        label: \"Melk\",\n        value: \"melk\",\n        disabled: true,\n        id: `melkid-${this.props.name}`,\n      },\n      {\n        label: \"Ananasjuice\",\n        value: \"juice3\",\n        id: `juice4id-${this.props.name}`,\n      },\n    ];\n  }\n\n  onChange = (event, value) => {\n    this.setState({ checked: value });\n  };\n\n  render() {\n    return (\n      <RadioPanelGruppe\n        name={this.props.name}\n        legend=\"Hvilken drikke er best?\"\n        radios={this.radios}\n        checked={this.state.checked}\n        onChange={this.onChange}\n        feil={this.props.feil ? \"Her er det en feil.\" : undefined}\n      />\n    );\n  }\n}\n\nexport default RadioPanelGruppeExample;\n"],"sourceRoot":""}