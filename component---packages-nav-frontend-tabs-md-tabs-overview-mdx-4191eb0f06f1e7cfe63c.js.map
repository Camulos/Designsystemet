{"version":3,"sources":["webpack:///../packages/nav-frontend-tabs/md/Tabs.overview.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Example","InlineCode","layoutProps","MDXContent","components","mdxType","parentName","tabs","label","onChange","type","className","border","style","borderTop","borderTopLeftRadius","borderTopRightRadius","kompakt","isMDXComponent"],"mappings":"+RAUaA,EAAe,CAC1B,QAAW,wFAGPC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAaN,EAAc,cAC3BO,EAAc,CAClBR,gBAGa,SAASS,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YALS,UAKT,iBAAeK,EAAiBL,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAC5E,mBACE,UAAa,qBACZ,kBAAIC,WAAW,MACd,UAAa,yBACZ,kBAAIA,WAAW,KACd,UAAa,wBACZ,iBAAGA,WAAW,KACb,UAAa,uBACb,KAAQ,WAFT,WAGqB,kBAAIA,WAAW,KACrC,UAAa,wBACZ,iBAAGA,WAAW,KACb,UAAa,uBACb,KAAQ,0BAFT,0BAGoC,kBAAIA,WAAW,KACpD,UAAa,wBACZ,iBAAGA,WAAW,KACb,UAAa,uBACb,KAAQ,YAFT,cAIP,kBACE,GAAM,UADR,UAGA,YAACN,EAAD,CAASK,QAAQ,WACnB,YAAC,IAAD,CAAME,KAAM,CAAC,CACPC,MAAO,UACN,CACDA,MAAO,SACN,CACDA,MAAO,WACLC,SAAU,aAAUJ,QAAQ,UAElC,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,gHAOL,kBACE,GAAM,yBADR,yBAGA,kEAAiD,iBAAGA,WAAW,IAC3D,KAAQ,qBADqC,SAAjD,kFAIA,YAAC,IAAD,CAAaI,KAAK,OAAOL,QAAQ,eAAjC,gHAGF,YAACJ,EAAD,CAAYU,UAAU,SAASN,QAAQ,cAAvC,UAHE,OAGyE,YAACJ,EAAD,CAAYU,UAAU,SAASN,QAAQ,cAAvC,iBAHzE,kEAK0E,YAACJ,EAAD,CAAYU,UAAU,SAASN,QAAQ,cAAvC,YAL1E,6IAUA,YAACL,EAAD,CAASK,QAAQ,WACnB,YAAC,IAAD,CAAME,KAAM,CAAC,CACPC,MAAO,UACN,CACDA,MAAO,SACN,CACDA,MAAO,WACLC,SAAU,aAAUJ,QAAQ,SACpC,YAAC,IAAD,CAAOO,QAAM,EAACC,MAAO,CACfC,UAAW,EACXC,oBAAqB,EACrBC,qBAAsB,GACrBX,QAAQ,SAJf,iBAQE,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,yQAcL,kBACE,GAAM,WADR,WAGA,YAACN,EAAD,CAASK,QAAQ,WACnB,YAAC,IAAD,CAAME,KAAM,CAAC,CACPC,MAAO,UACN,CACDA,MAAO,SACN,CACDA,MAAO,WACLC,SAAU,aAAUQ,SAAO,EAACZ,QAAQ,UAE1C,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,4HAYTH,EAAWe,gBAAiB","file":"component---packages-nav-frontend-tabs-md-tabs-overview-mdx-4191eb0f06f1e7cfe63c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Tabs from \"./../\";\nimport Panel from \"nav-frontend-paneler\";\nimport Alertstripe from \"nav-frontend-alertstriper\";\nexport const _frontmatter = {\n  \"ingress\": \"Tabs er en meny som gir brukeren mulighet til å bytte mellom lagvis inndelt innhold.\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst InlineCode = makeShortcode(\"InlineCode\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <nav {...{\n      \"className\": \"table-of-contents\"\n    }}><ol parentName=\"nav\" {...{\n        \"className\": \"toc-level toc-level-1\"\n      }}><li parentName=\"ol\" {...{\n          \"className\": \"toc-item toc-item-h2\"\n        }}><a parentName=\"li\" {...{\n            \"className\": \"toc-link toc-link-h2\",\n            \"href\": \"#normal\"\n          }}>{`Normal`}</a></li><li parentName=\"ol\" {...{\n          \"className\": \"toc-item toc-item-h2\"\n        }}><a parentName=\"li\" {...{\n            \"className\": \"toc-link toc-link-h2\",\n            \"href\": \"#kombinasjon-med-panel\"\n          }}>{`Kombinasjon med panel`}</a></li><li parentName=\"ol\" {...{\n          \"className\": \"toc-item toc-item-h2\"\n        }}><a parentName=\"li\" {...{\n            \"className\": \"toc-link toc-link-h2\",\n            \"href\": \"#kompakt\"\n          }}>{`Kompakt`}</a></li></ol></nav>\n    <h2 {...{\n      \"id\": \"normal\"\n    }}>{`Normal`}</h2>\n    <Example mdxType=\"Example\">\n  <Tabs tabs={[{\n        label: \"Første\"\n      }, {\n        label: \"Andre\"\n      }, {\n        label: \"Tredje\"\n      }]} onChange={() => {}} mdxType=\"Tabs\" />\n    </Example>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tabs\n  tabs={[{ label: \"Første\" }, { label: \"Andre\" }, { label: \"Tredje\" }]}\n  onChange={() => {}}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"kombinasjon-med-panel\"\n    }}>{`Kombinasjon med panel`}</h2>\n    <p>{`Komponenten passer fint i kombinasjon med `}<a parentName=\"p\" {...{\n        \"href\": \"/components/panel\"\n      }}>{`Panel`}</a>{`, hvor normal variant bør plasseres\nutenfor og langs øverste kant av panelet.`}</p>\n    <Alertstripe type=\"info\" mdxType=\"Alertstripe\">\n  Inntil videre må du manuelt håndtere visning av riktig panel-innhold når aktiv\n  tab endres. Du må også skru av\n  <InlineCode className=\"inline\" mdxType=\"InlineCode\">border</InlineCode> og <InlineCode className=\"inline\" mdxType=\"InlineCode\">\n    border-radius\n  </InlineCode> langs toppen av panelet. Vi jobber med å lage en mer avansert <InlineCode className=\"inline\" mdxType=\"InlineCode\">\n    TabPanel\n  </InlineCode> komponent som er tenkt å både fikse disse stilene for deg, og håndtere\n  automatisk visning av riktig panel-innhold avhengig av aktiv tab.\n    </Alertstripe>\n    <Example mdxType=\"Example\">\n  <Tabs tabs={[{\n        label: \"Første\"\n      }, {\n        label: \"Andre\"\n      }, {\n        label: \"Tredje\"\n      }]} onChange={() => {}} mdxType=\"Tabs\" />\n  <Panel border style={{\n        borderTop: 0,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      }} mdxType=\"Panel\">\n    Innhold her.\n  </Panel>\n    </Example>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tabs\n    tabs={[\n        {\"label\": \"Første\"},\n        {\"label\": \"Andre\"},\n        {\"label\": \"Tredje\"}\n    ]}\n    onChange={() => {}}\n/>\n<Panel border style={{borderTop:0, borderTopLeftRadius: 0, borderTopRightRadius: 0}}>\n    Innhold her.\n</Panel>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"kompakt\"\n    }}>{`Kompakt`}</h2>\n    <Example mdxType=\"Example\">\n  <Tabs tabs={[{\n        label: \"Første\"\n      }, {\n        label: \"Andre\"\n      }, {\n        label: \"Tredje\"\n      }]} onChange={() => {}} kompakt mdxType=\"Tabs\" />\n    </Example>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Tabs\n  tabs={[{ label: \"Første\" }, { label: \"Andre\" }, { label: \"Tredje\" }]}\n  onChange={() => {}}\n  kompakt\n/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}